{
	"info": {
		"_postman_id": "06c80f76-5f0d-4dd5-b6af-fee5dbf2d2a3",
		"name": "cdsnodejs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d8afef99-8515-44cb-a9ea-d5d899a62615",
						"exec": [
							"tests['CREATED response'] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"a@b.com\",\n\t\"firstName\": \"TestName1\",\n\t\"lastName\": \"TestName1\",\n\t\"password\": \"abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/users",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"users"
					]
				},
				"description": "Creates a new user with valid data"
			},
			"response": []
		},
		{
			"name": "Create duplicate user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "454a301e-1182-444f-8267-c0fc3a8fb69b",
						"exec": [
							"tests['BAD REQUEST response'] = responseCode.code === 400;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"a@b.com\",\n\t\"firstName\": \"TestName1\",\n\t\"lastName\": \"TestName1\",\n\t\"password\": \"abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/users",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"users"
					]
				},
				"description": "Creates a new user with valid data"
			},
			"response": []
		},
		{
			"name": "Create user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "08c57a62-d06d-411e-a618-24c1e5ed05a2",
						"exec": [
							"tests['CREATED response'] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"b@c.com\",\n\t\"firstName\": \"TestName2\",\n\t\"lastName\": \"TestName2\",\n\t\"password\": \"abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/users",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"users"
					]
				},
				"description": "Creates a new user with valid data"
			},
			"response": []
		},
		{
			"name": "Login user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c5ed438-be70-4255-8f24-dd93d0bc351f",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"tests['OK response'] = responseCode.code === 200;",
							"tests['Token recieved'] = response.token !== undefined;",
							"postman.setEnvironmentVariable(\"tokenUser1\", response.token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"a@b.com\",\n\t\"password\": \"abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/login",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"login"
					]
				},
				"description": "Loginsinto the system and obtains a token"
			},
			"response": []
		},
		{
			"name": "Login user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "34e646b7-6afa-404e-a2a1-fe8a9455201c",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"tests['OK response'] = responseCode.code === 200;",
							"tests['Token recieved'] = response.token !== undefined;",
							"postman.setEnvironmentVariable(\"tokenUser2\", response.token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"b@c.com\",\n\t\"password\": \"abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/login",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"login"
					]
				},
				"description": "Loginsinto the system and obtains a token"
			},
			"response": []
		},
		{
			"name": "Login with invalid email",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "829184c0-a6de-4527-a260-7d9c05d32abd",
						"exec": [
							"tests['BAD REQUEST response'] = responseCode.code === 400;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"none@c.com\",\n\t\"password\": \"abc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/login",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"login"
					]
				},
				"description": "Loginsinto the system and obtains a token"
			},
			"response": []
		},
		{
			"name": "Login with invalid password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c26322e-3c14-4711-8ab7-1e8beeb055cd",
						"exec": [
							"tests['BAD REQUEST response'] = responseCode.code === 400;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"b@c.com\",\n\t\"password\": \"abcd\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/login",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"login"
					]
				},
				"description": "Loginsinto the system and obtains a token"
			},
			"response": []
		},
		{
			"name": "Get movies without a token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "af836815-b4d5-4e01-ab63-77d3e7908621",
						"exec": [
							"tests['BAD REQUEST response'] = responseCode.code === 400;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/api/movies",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get movies as user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6d979e9a-3cf7-4c47-b6f8-af2d18ecec8c",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"tests['OK response'] = responseCode.code === 200;",
							"tests['Recieved Data'] = response.length > 0;",
							"tests['suggestionScore is valid'] = (response[0].suggestionScore >= 0 && response[0].suggestionScore <= 99);",
							"postman.setEnvironmentVariable(\"selectedMovieUser1\", JSON.stringify(response[0]));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenUser1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/api/movies",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get movies as user1 filtering by keyword",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f7b5c2f-d496-4975-a7dc-a9c0c0df29cb",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"tests['OK response'] = responseCode.code === 200;",
							"tests['Recieved Data'] = response.length > 0;",
							"tests['suggestionScore is valid'] = (response[0].suggestionScore >= 0 && response[0].suggestionScore <= 99);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenUser1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/api/movies?keyword={{keyword}}",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies"
					],
					"query": [
						{
							"key": "keyword",
							"value": "{{keyword}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add favorite movie as user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2f0115d0-c6eb-4298-87b4-faeeb80a2132",
						"exec": [
							"tests['CREATED response'] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenUser1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{selectedMovieUser1}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/movies/favorites",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies",
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add duplicate favorite movie as user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5273e3c5-f981-4a6f-9cb2-46a2c51c1ce9",
						"exec": [
							"tests['BAD REQUEST response'] = responseCode.code === 400;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenUser1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{selectedMovieUser1}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/movies/favorites",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies",
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add favorite movie without a token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "746618f8-3ece-45c1-81b1-d867fbb4bb6f",
						"exec": [
							"tests['BAD REQUEST response'] = responseCode.code === 400;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{selectedMovieUser1}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}:{{port}}/api/movies/favorites",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies",
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get favorite movies as user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "85001037-9a5d-4559-83de-cf57a4554fa3",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"tests['OK response'] = responseCode.code === 200;",
							"tests['Recieved Data'] = response.length === 1;",
							"tests['suggestionScore is valid'] = (response[0].suggestionScore >= 0 && response[0].suggestionScore <= 99);",
							"tests['suggestionForTodayScore valid'] = (response[0].suggestionForTodayScore >= 0 && response[0].suggestionForTodayScore <= 99);",
							"tests['addedAt is valid'] = response[0].addedAt.length > 0;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenUser1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/api/movies/favorites",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies",
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get favorite movies as user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0281cb03-4d89-4c8c-a1d6-68106fd14470",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"tests['OK response'] = responseCode.code === 200;",
							"tests['Recieved Data'] = response.length === 0;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenUser2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/api/movies/favorites",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies",
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get favorite movies without a token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb882395-1355-4a4b-a018-58cf60913c76",
						"exec": [
							"tests['BAD REQUEST response'] = responseCode.code === 400;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/api/movies/favorites",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies",
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f66dbb71-f2ba-45b3-b035-b8cdb64c9220",
						"exec": [
							"tests['OK response'] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenUser1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/api/logout",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get movies as user1 logged out",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07073e0a-9a9e-4ae6-baf1-bc159ea7e152",
						"exec": [
							"tests['BAD REQUEST response'] = responseCode.code === 400;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenUser1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/api/movies/favorites",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies",
						"favorites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get favorite movies as user1 logged out",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b2d9d1-c00d-440d-ae0d-7ca40e9d5e3f",
						"exec": [
							"tests['BAD REQUEST response'] = responseCode.code === 400;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenUser1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}:{{port}}/api/movies/favorites",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"movies",
						"favorites"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}